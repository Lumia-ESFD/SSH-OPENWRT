# This is a basic workflow to help you get started with Actions

name: BUILD OPENWRT SSH

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
    # branches: [ main ]
  # pull_request:
    # branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  UPLOAD_FIRMWARE: true
  UPLOAD_BIN_DIR: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # SSH Connect To Actions
      - name: Setup Debug Session
        uses: csexton/debugger-action@master
        
      - name: Organize files
        id: organize
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Upload firmware directory
        uses: actions/upload-artifact@main
        if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
